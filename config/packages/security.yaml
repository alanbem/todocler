security:
  # https://symfony.com/doc/current/security/experimental_authenticators.html
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#c-hashing-passwords
  password_hashers:
    Users\Application\Projector\RegisteredUsers\Doctrine\Entity\RegisteredUser: 'auto'
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    registered_users:
      entity:
        class: Users\Application\Projector\RegisteredUsers\Doctrine\Entity\RegisteredUser
        property: email
        manager_name: registered_users_projection
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    api:
      pattern: ^/api
      stateless: true
      provider: registered_users
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator
    main:
      json_login:
        check_path: /auth/token
        username_path: email
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/, roles: PUBLIC_ACCESS }
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
